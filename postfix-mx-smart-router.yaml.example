servers:
  names: 
    # Define your server adddresses (name or IP) 
    # along with the optional perc: param, which defaults to 100.
    # the `perc` influences how often this server is chosen in the iteration,
    # with 0 = not chosen at all and 100 = chosen on every iteration.
    # the attribute name, i.e. `mx1`, is used below for creating groups
    mx1:  
      address: relay:[mx1.example.com]:25
      perc: 100 # default
    mx2:  
      address: relay:[mx2.example.com]:25
    mx3:  
      address: relay:[mx3.example.com]:25
      perc: 50
    mx4:  
      address: relay:[mx4.example.com]:25
    mx5:  
      address: relay:[mx5.example.com]:25
      perc: 10
    mx6:  
      address: relay:[mx6.example.com]:25
    mx7:  
      address: relay:[mx7.example.com]:25
  
  # create convenient groups of servers for the rules above
  good:     [mx1, mx2, mx3]
  bad: [mx4, mx5, mx6, mx7]

sender_rules:
  # the order of the rules is important: start from the longer emails down to the shortest, 
  # i.e. given the two rules:
  # - office@example.com : bad
  # - financial_office@example.com : good
  # the first match will always be chosen even if the email is the second, because it is a match.
  # hence domains should always come after emails only.

  # in case no match is found in the rules, the message will use the full list of servers to send.

  # Special `default` rule
  # If the list of rules contains a `default` rule,
  # any emails will default to this group instead of the full list of servers.

  john@example.com:  bad
  roger@example.com:  bad
  fred@example.com:  bad
  laura@example.com:  bad
  jane@example.com:  bad
  info@example.com:  good
  example.com: good
  default:  good


